<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="strBtnAccept" xml:space="preserve">
    <value>&amp;Accept</value>
  </data>
  <data name="strBtnCancel" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="strBtnDlgFont" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="strBtnExample" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="strBtnReset" xml:space="preserve">
    <value>&amp;Reset</value>
  </data>
  <data name="strChkDlgPath" xml:space="preserve">
    <value>Remember open/save dialog previous path</value>
  </data>
  <data name="strDlgReset" xml:space="preserve">
    <value>Do you want to reset all fields
to their default values?</value>
  </data>
  <data name="strDlgResetTitle" xml:space="preserve">
    <value>Reset settings?</value>
  </data>
  <data name="strFormLanguageTitle" xml:space="preserve">
    <value>Select culture</value>
  </data>
  <data name="strFormMainTitle" xml:space="preserve">
    <value>ErgoCalc</value>
  </data>
  <data name="strFormNewTitle" xml:space="preserve">
    <value>New model</value>
  </data>
  <data name="strFormResultsCLM" xml:space="preserve">
    <value>CLM model results</value>
  </data>
  <data name="strFormResultsLiberty" xml:space="preserve">
    <value>LM-MMH model results</value>
  </data>
  <data name="strFormResultsMetabolic" xml:space="preserve">
    <value>Metabolic rate results</value>
  </data>
  <data name="strFormResultsNIOSH" xml:space="preserve">
    <value>NIOSH model results</value>
  </data>
  <data name="strFormResultsOCRAcheck" xml:space="preserve">
    <value>OCRA checklist model results</value>
  </data>
  <data name="strFormResultsStrainIndex" xml:space="preserve">
    <value>Strain Index model results</value>
  </data>
  <data name="strFormResultsTC" xml:space="preserve">
    <value>Thermal comfort results</value>
  </data>
  <data name="strFormResultsWR" xml:space="preserve">
    <value>WR model results</value>
  </data>
  <data name="strFormTitleUnion" xml:space="preserve">
    <value> - </value>
  </data>
  <data name="strFrmSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="strGrpCulture" xml:space="preserve">
    <value>Language and culture options</value>
  </data>
  <data name="strGrpFont" xml:space="preserve">
    <value>Current font</value>
  </data>
  <data name="strLblDataFormat" xml:space="preserve">
    <value>Numeric data-formatting string</value>
  </data>
  <data name="strLblDlgFont" xml:space="preserve">
    <value>Change current font</value>
  </data>
  <data name="strLblFontColor" xml:space="preserve">
    <value>Font color: {0}</value>
  </data>
  <data name="strLblFontName" xml:space="preserve">
    <value>Font name: {0}</value>
  </data>
  <data name="strLblFontSize" xml:space="preserve">
    <value>Font size: {0}</value>
  </data>
  <data name="strLblFontStyle" xml:space="preserve">
    <value>Font style: {0}</value>
  </data>
  <data name="strLblSelect" xml:space="preserve">
    <value>Please, select a model to start working with:</value>
  </data>
  <data name="strMenuMainFile" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="strMenuMainFileExit" xml:space="preserve">
    <value>&amp;Exit...</value>
  </data>
  <data name="strMenuMainFileNew" xml:space="preserve">
    <value>&amp;New...</value>
  </data>
  <data name="strMenuMainHelp" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="strMenuMainHelpAbout" xml:space="preserve">
    <value>&amp;About...</value>
  </data>
  <data name="strMenuMainWindow" xml:space="preserve">
    <value>&amp;Window</value>
  </data>
  <data name="strMsgBoxExit" xml:space="preserve">
    <value>Are you sure you want to exit
the application?</value>
  </data>
  <data name="strMsgBoxExitTitle" xml:space="preserve">
    <value>Exit?</value>
  </data>
  <data name="strRadCurrentCulture" xml:space="preserve">
    <value>Current culture formatting</value>
  </data>
  <data name="strRadInvariantCulture" xml:space="preserve">
    <value>Invariant culture formatting</value>
  </data>
  <data name="strRadModelCLM" xml:space="preserve">
    <value>Comprehensive lifting model (CLM)</value>
  </data>
  <data name="strRadModelLiberty" xml:space="preserve">
    <value>Liberty Mutual manual handling</value>
  </data>
  <data name="strRadModelMetabolic" xml:space="preserve">
    <value>Metabolic rate</value>
  </data>
  <data name="strRadModelNIOSH" xml:space="preserve">
    <value>NIOSH lifting equation (LI, CLI, SLI, VLI)</value>
  </data>
  <data name="strRadModelOCRA" xml:space="preserve">
    <value>OCRA checklist</value>
  </data>
  <data name="strRadModelStrain" xml:space="preserve">
    <value>Revised strain index (RSI, COSI, CUSI)</value>
  </data>
  <data name="strRadModelThermal" xml:space="preserve">
    <value>Thermal comfort (PMV, PPD)</value>
  </data>
  <data name="strRadModelWR" xml:space="preserve">
    <value>WorkRest model (1991)</value>
  </data>
  <data name="strRadUserCulture" xml:space="preserve">
    <value>Select culture</value>
  </data>
  <data name="strSubTask" xml:space="preserve">
    <value>Subtask</value>
  </data>
  <data name="strTabGUI" xml:space="preserve">
    <value>User interface</value>
  </data>
  <data name="strTabPlot" xml:space="preserve">
    <value>Text and font</value>
  </data>
  <data name="strTask" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="strToolStripAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="strToolStripAddLine" xml:space="preserve">
    <value>Add line</value>
  </data>
  <data name="strToolStripDuplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="strToolStripEdit" xml:space="preserve">
    <value>Edit data</value>
  </data>
  <data name="strToolStripExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="strToolStripNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="strToolStripOpen" xml:space="preserve">
    <value>Open model</value>
  </data>
  <data name="strToolStripRemoveLine" xml:space="preserve">
    <value>Remove line</value>
  </data>
  <data name="strToolStripSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="strToolStripSaveChart" xml:space="preserve">
    <value>Save chart</value>
  </data>
  <data name="strToolStripSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="strToolTipAbout" xml:space="preserve">
    <value>About this software</value>
  </data>
  <data name="strToolTipAddLine" xml:space="preserve">
    <value>Add line to the current plot</value>
  </data>
  <data name="strToolTipDuplicate" xml:space="preserve">
    <value>Duplicate the current model</value>
  </data>
  <data name="strToolTipEdit" xml:space="preserve">
    <value>Edit current model's data</value>
  </data>
  <data name="strToolTipExit" xml:space="preserve">
    <value>Exit the application</value>
  </data>
  <data name="strToolTipNew" xml:space="preserve">
    <value>Start a new ergonomics model</value>
  </data>
  <data name="strToolTipOpen" xml:space="preserve">
    <value>Open data-file model from disk</value>
  </data>
  <data name="strToolTipRemoveLine" xml:space="preserve">
    <value>Remove line from the current plot</value>
  </data>
  <data name="strToolTipSave" xml:space="preserve">
    <value>Save data and results to disk</value>
  </data>
  <data name="strToolTipSaveChart" xml:space="preserve">
    <value>Save chart picture to disk</value>
  </data>
  <data name="strToolTipSettings" xml:space="preserve">
    <value>Settings for models, data, and UI</value>
  </data>
  <data name="strToolTipUILanguage" xml:space="preserve">
    <value>User interface language</value>
  </data>
</root>